# Enhanced TTS Provider Configurations
# This file contains all TTS provider settings and enhanced text processing options

# Global text processing settings to prevent TTS errors
text_processing:
  # Minimum chunk length to prevent kernel size errors
  min_chunk_length: 100

  # Chunk size settings (used when text is too long)
  chunk_size: 1000
  chunk_overlap: 100
  pause_between_chunks: 0.5

  # Text preprocessing options
  clean_markdown: true
  expand_abbreviations: true
  add_pauses: true
  normalize_unicode: true # Remove problematic combining characters
  replace_ipa_symbols: true # Replace IPA symbols with readable equivalents

  # Character replacements for problematic Unicode
  character_replacements:
    "–": "-" # en dash
    "—": "-" # em dash
    "’": "'" # right single quotation mark (smart quote)
    "‘": "'" # left single quotation mark (smart quote)
    '"': '"' # smart quote
    "…": "..." # ellipsis
    "ɹ": "r" # IPA r
    "ɚ": "er" # IPA schwa-r
    "t͡ʃ": "ch" # IPA ch sound
    "ʃ": "sh" # IPA sh sound
    "θ": "th" # IPA theta
    "ð": "th" # IPA eth

# Provider-specific configurations
providers:
  # Enhanced Coqui TTS Configuration
  coqui:
    name: "Coqui TTS"
    type: "local"

    models:
      # Fast model for testing (less likely to have kernel size issues)
      fast:
        model_name: "tts_models/en/ljspeech/tacotron2-DDC"
        description: "Fast, stable model - good for testing"
        speed: "fast"
        quality: "medium"
        min_text_length: 50

      # Alternative fast model
      fast_alt:
        model_name: "tts_models/en/ljspeech/speedy-speech"
        description: "Alternative fast model"
        speed: "fast"
        quality: "medium"
        min_text_length: 30

      # High quality model (requires longer text)
      high_quality:
        model_name: "tts_models/en/ljspeech/glow-tts"
        description: "Higher quality, requires longer text"
        speed: "medium"
        quality: "high"
        min_text_length: 100

      # Multi-lingual model with voice cloning
      xtts:
        model_name: "tts_models/multilingual/multi-dataset/xtts_v2"
        description: "Highest quality, supports voice cloning"
        speed: "slow"
        quality: "very_high"
        supports_voice_cloning: true
        min_text_length: 150

    # Default model selection
    default_model: "fast"
    fallback_model: "fast_alt" # Use if default fails

    # Audio output settings
    output_format: "wav"
    sample_rate: 22050

    # Error handling
    max_retries: 3
    retry_with_fallback: true

  # Enhanced Edge TTS Configuration
  edge_tts:
    name: "Microsoft Edge TTS"
    type: "local_api"

    # English voices optimized for academic content
    voices:
      # US English - Professional/News voices (best for academic content)
      us_professional:
        - "en-US-AriaNeural" # Female, Positive, Confident - excellent for long-form content
        - "en-US-ChristopherNeural" # Male, Reliable, Authority - great for technical content
        - "en-US-JennyNeural" # Female, Friendly, Considerate, Comfort
        - "en-US-GuyNeural" # Male, News, Novel, Passion - good for engaging content
        - "en-US-MichelleNeural" # Female, News, Novel, Friendly, Pleasant

      # US English - Additional options
      us_standard:
        - "en-US-AnaNeural" # Female, Cartoon, Conversation, Cute
        - "en-US-EricNeural" # Male, News, Novel, Rational
        - "en-US-RogerNeural" # Male, News, Novel, Lively
        - "en-US-SteffanNeural" # Male, News, Novel, Rational

      # British English - Professional
      uk_professional:
        - "en-GB-SoniaNeural" # Female, Friendly, Positive
        - "en-GB-RyanNeural" # Male, Friendly, Positive
        - "en-GB-LibbyNeural" # Female, Friendly, Positive
        - "en-GB-ThomasNeural" # Male, Friendly, Positive
        - "en-GB-MaisieNeural" # Female, Friendly, Positive

      # Canadian English
      canadian:
        - "en-CA-ClaraNeural" # Female, Friendly, Positive
        - "en-CA-LiamNeural" # Male, Friendly, Positive

      # Australian English
      australian:
        - "en-AU-NatashaNeural" # Female, Friendly, Positive
        - "en-AU-WilliamNeural" # Male, Friendly, Positive

      # Other English variants
      irish:
        - "en-IE-EmilyNeural" # Female, Friendly, Positive
        - "en-IE-ConnorNeural" # Male, Friendly, Positive

      south_african:
        - "en-ZA-LeahNeural" # Female, Friendly, Positive
        - "en-ZA-LukeNeural" # Male, Friendly, Positive

    # Voice recommendations by use case
    voice_recommendations:
      academic_research:
        primary: "en-US-AriaNeural" # Best for long-form academic content
        male_alternative: "en-US-ChristopherNeural"
        british: "en-GB-SoniaNeural"

      technical_content:
        primary: "en-US-ChristopherNeural" # Authoritative for technical content
        female_alternative: "en-US-AriaNeural"
        rational: "en-US-EricNeural"

      engaging_presentations:
        primary: "en-US-GuyNeural" # Passionate delivery
        friendly: "en-US-JennyNeural"
        lively: "en-US-RogerNeural"

      international_audience:
        british: "en-GB-RyanNeural"
        canadian: "en-CA-LiamNeural"
        australian: "en-AU-WilliamNeural"

    # Default voice selection
    default_voice: "en-US-AriaNeural" # Best overall for academic content
    fallback_voice: "en-US-ChristopherNeural" # Reliable backup

    # Audio output settings
    output_format: "mp3"

    # Rate, pitch, and volume control (-100% to +200%)
    rate: "+0%" # Normal speed
    pitch: "+0Hz" # Normal pitch
    volume: "+0%" # Normal volume

    # Quality and performance settings
    max_chars_per_request: 3000 # Split longer texts
    connection_timeout: 30 # Seconds

    # Reliability settings
    max_retries: 3
    retry_delay: 1.0

  # Enhanced Bark Configuration
  bark:
    name: "Bark"
    type: "local"

    voice_presets:
      male:
        - "v2/en_speaker_0" # Male, formal
        - "v2/en_speaker_1" # Male, casual
        - "v2/en_speaker_2" # Male, warm
        - "v2/en_speaker_3" # Male, energetic
        - "v2/en_speaker_4" # Male, deep
        - "v2/en_speaker_5" # Male, friendly

      female:
        - "v2/en_speaker_6" # Female, professional
        - "v2/en_speaker_7" # Female, warm
        - "v2/en_speaker_8" # Female, clear
        - "v2/en_speaker_9" # Female, enthusiastic

    default_voice: "v2/en_speaker_6"
    output_format: "wav"
    sample_rate: 24000
    supports_emotions: true

    # Generation settings
    text_temp: 0.7
    waveform_temp: 0.7

  # OpenAI TTS Configuration
  openai:
    name: "OpenAI TTS"
    type: "api"
    api_key_env: "OPENAI_API_KEY"

    models:
      - "tts-1" # Standard quality
      - "tts-1-hd" # HD quality

    voices:
      - "alloy" # Neutral, balanced
      - "echo" # Male, clear
      - "fable" # British accent
      - "onyx" # Deep, authoritative
      - "nova" # Young, energetic
      - "shimmer" # Warm, friendly

    default_model: "tts-1"
    default_voice: "alloy"
    output_format: "mp3"

    # API settings
    speed: 1.0
    max_chars_per_request: 4096

  # ElevenLabs Configuration
  elevenlabs:
    name: "ElevenLabs"
    type: "api"
    api_key_env: "ELEVENLABS_API_KEY"

    voices:
      premade:
        - "21m00Tcm4TlvDq8ikWAM" # Rachel - Professional female
        - "AZnzlk1XvdvUeBnXmlld" # Domi - Confident male
        - "EXAVITQu4vr4xnSDxMaL" # Bella - Warm female
        - "ErXwobaYiN019PkySvjV" # Antoni - Deep male
        - "MF3mGyEYCl7XYWbV9V6O" # Elli - Young female
        - "TxGEqnHWrfWFTfGW9XjX" # Josh - Young male

    default_voice: "21m00Tcm4TlvDq8ikWAM"

    # Quality settings
    model_id: "eleven_monolingual_v1"
    stability: 0.5
    similarity_boost: 0.75
    style: 0.0
    use_speaker_boost: true

    output_format: "mp3"
    max_chars_per_request: 5000

# Enhanced installation requirements
installation:
  coqui:
    pip: ["TTS>=0.22.0"]
    system_deps: ["espeak", "espeak-data", "libespeak1", "libespeak-dev"]
    notes: "May require system dependencies for phoneme processing"
    troubleshooting:
      kernel_size_error: "Ensure text is at least 50 characters long"

  bark:
    pip: ["git+https://github.com/suno-ai/bark.git", "scipy>=1.9.0"]
    notes: "Requires significant disk space for models (~10GB)"

  edge_tts:
    pip: ["edge-tts>=6.1.0"]
    notes: "No additional setup required, uses Microsoft servers"

  openai:
    pip: ["openai>=1.0.0"]
    env_vars: ["OPENAI_API_KEY"]
    notes: "Requires API key from OpenAI"

  elevenlabs:
    pip: ["requests>=2.28.0"]
    env_vars: ["ELEVENLABS_API_KEY"]
    notes: "Requires API key from ElevenLabs"

# Error handling and fallback strategies
error_handling:
  # Automatic fallback chain
  fallback_providers: ["edge_tts", "coqui"]

  # Retry settings
  max_retries: 3
  retry_delay: 1.0

  # Text length validation
  enforce_min_length: true
  min_text_length: 50
  padding_text: ". This ensures adequate length for speech synthesis."

  # Character handling
  remove_combining_chars: true
  replace_unknown_chars: true
  fallback_char: " "

# Performance and optimization
performance:
  # Parallel processing
  enable_parallel: false # Enable for API providers only
  max_workers: 2

  # Caching
  enable_cache: true
  cache_dir: ".tts_cache"
  max_cache_size_mb: 500

  # Memory management
  clear_model_after_use: false # Set true if memory is limited
  gpu_memory_fraction: 0.8 # For GPU models
